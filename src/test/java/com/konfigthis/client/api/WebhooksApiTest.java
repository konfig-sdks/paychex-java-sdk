/*
 * External API
 *   # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Authentication1;
import com.konfigthis.client.model.Link;
import com.konfigthis.client.model.WebhookRequest;
import com.konfigthis.client.model.WebhookResponse;
import com.konfigthis.client.model.WebhooksGetSpecificHookByIdResponse;
import com.konfigthis.client.model.WebhooksListResponseInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Disabled
public class WebhooksApiTest {

    private static WebhooksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WebhooksApi(apiClient);
    }

    /**
     * Add Webhook
     *
     * &lt;h3&gt;Add a webhook for the calling application.&lt;/h3&gt;&lt;p&gt;When registering a webhook, you will need to provide your own URI in the request body (see our &lt;a href&#x3D;&#39;https://developer.paychex.com/resources/webhooks&#39;&gt;full webhook documention here&lt;/a&gt; on how to configure your URI). The newly registered webhook will send notifications to this endpoint as JSON payloads which vary by domain. Please configure your endpoint to accept the relevant payloads. To see an example payload for each domain, please refer to the \&quot;Callbacks\&quot; tab.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addWebhookTest() throws ApiException {
        String uri = null;
        Authentication1 authentication = null;
        List<String> domains = null;
        String hookId = null;
        String companyId = null;
        List<Link> links = null;
        WebhookResponse response = api.addWebhook(uri, authentication, domains)
                .hookId(hookId)
                .companyId(companyId)
                .links(links)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Webhook
     *
     * Delete a specific hook for the calling application by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByIdTest() throws ApiException {
        String hookId = null;
        String response = api.deleteById(hookId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Webhook domains
     *
     * Will return a list of available domains depending on application type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAvailableDomainsTest() throws ApiException {
        String response = api.getAvailableDomains()
                .execute();
        // TODO: test validations
    }

    /**
     * Webhook
     *
     * Get a specific hook for the calling application by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificHookByIdTest() throws ApiException {
        String hookId = null;
        WebhooksGetSpecificHookByIdResponse response = api.getSpecificHookById(hookId)
                .execute();
        // TODO: test validations
    }

    /**
     * List Webhooks
     *
     * List all the webhooks setup for the calling application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        List<WebhooksListResponseInner> response = api.list()
                .execute();
        // TODO: test validations
    }

}
