/*
 * External API
 *   # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ClientAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ClientAddressVersion
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ClientAddressVersion {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_VAL_STATE_CODE = "valStateCode";
  @SerializedName(SERIALIZED_NAME_VAL_STATE_CODE)
  private String valStateCode;

  public static final String SERIALIZED_NAME_VER_STATE_CODE = "verStateCode";
  @SerializedName(SERIALIZED_NAME_VER_STATE_CODE)
  private String verStateCode;

  public static final String SERIALIZED_NAME_BEGIN_EFFECTIVE_DATE = "beginEffectiveDate";
  @SerializedName(SERIALIZED_NAME_BEGIN_EFFECTIVE_DATE)
  private OffsetDateTime beginEffectiveDate;

  public static final String SERIALIZED_NAME_END_EFFECTIVE_DATE = "endEffectiveDate";
  @SerializedName(SERIALIZED_NAME_END_EFFECTIVE_DATE)
  private OffsetDateTime endEffectiveDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_STATE_PROVINCE = "stateProvince";
  @SerializedName(SERIALIZED_NAME_STATE_PROVINCE)
  private String stateProvince;

  public static final String SERIALIZED_NAME_STATE_PROVINCE_F = "stateProvinceF";
  @SerializedName(SERIALIZED_NAME_STATE_PROVINCE_F)
  private String stateProvinceF;

  public static final String SERIALIZED_NAME_PORTAL_CODE = "portalCode";
  @SerializedName(SERIALIZED_NAME_PORTAL_CODE)
  private String portalCode;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_BUILDING_NUMBER = "buildingNumber";
  @SerializedName(SERIALIZED_NAME_BUILDING_NUMBER)
  private String buildingNumber;

  public static final String SERIALIZED_NAME_UNIT_NAME = "unitName";
  @SerializedName(SERIALIZED_NAME_UNIT_NAME)
  private String unitName;

  public static final String SERIALIZED_NAME_STREET_NAME = "streetName";
  @SerializedName(SERIALIZED_NAME_STREET_NAME)
  private String streetName;

  public static final String SERIALIZED_NAME_PO_BOX = "poBox";
  @SerializedName(SERIALIZED_NAME_PO_BOX)
  private String poBox;

  public static final String SERIALIZED_NAME_STREET_ADDRESS_ONE = "streetAddressOne";
  @SerializedName(SERIALIZED_NAME_STREET_ADDRESS_ONE)
  private String streetAddressOne;

  public static final String SERIALIZED_NAME_STREET_ADDRESS_TWO = "streetAddressTwo";
  @SerializedName(SERIALIZED_NAME_STREET_ADDRESS_TWO)
  private String streetAddressTwo;

  public static final String SERIALIZED_NAME_MODIFED_BY_APPLICATION_NAME = "modifedByApplicationName";
  @SerializedName(SERIALIZED_NAME_MODIFED_BY_APPLICATION_NAME)
  private String modifedByApplicationName;

  public static final String SERIALIZED_NAME_MODIFIED_BY_APPLICATION_SUB_PROCESS_NAME = "modifiedByApplicationSubProcessName";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_APPLICATION_SUB_PROCESS_NAME)
  private String modifiedByApplicationSubProcessName;

  public static final String SERIALIZED_NAME_MODIFIED_BY_USER_ID = "modifiedByUserId";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_USER_ID)
  private String modifiedByUserId;

  public static final String SERIALIZED_NAME_CLIENT_ADDRESS = "clientAddress";
  @SerializedName(SERIALIZED_NAME_CLIENT_ADDRESS)
  private ClientAddress clientAddress;

  public ClientAddressVersion() {
  }

  public ClientAddressVersion id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public ClientAddressVersion city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public ClientAddressVersion valStateCode(String valStateCode) {
    
    
    
    
    this.valStateCode = valStateCode;
    return this;
  }

   /**
   * Get valStateCode
   * @return valStateCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getValStateCode() {
    return valStateCode;
  }


  public void setValStateCode(String valStateCode) {
    
    
    
    this.valStateCode = valStateCode;
  }


  public ClientAddressVersion verStateCode(String verStateCode) {
    
    
    
    
    this.verStateCode = verStateCode;
    return this;
  }

   /**
   * Get verStateCode
   * @return verStateCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVerStateCode() {
    return verStateCode;
  }


  public void setVerStateCode(String verStateCode) {
    
    
    
    this.verStateCode = verStateCode;
  }


  public ClientAddressVersion beginEffectiveDate(OffsetDateTime beginEffectiveDate) {
    
    
    
    
    this.beginEffectiveDate = beginEffectiveDate;
    return this;
  }

   /**
   * Get beginEffectiveDate
   * @return beginEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBeginEffectiveDate() {
    return beginEffectiveDate;
  }


  public void setBeginEffectiveDate(OffsetDateTime beginEffectiveDate) {
    
    
    
    this.beginEffectiveDate = beginEffectiveDate;
  }


  public ClientAddressVersion endEffectiveDate(OffsetDateTime endEffectiveDate) {
    
    
    
    
    this.endEffectiveDate = endEffectiveDate;
    return this;
  }

   /**
   * Get endEffectiveDate
   * @return endEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndEffectiveDate() {
    return endEffectiveDate;
  }


  public void setEndEffectiveDate(OffsetDateTime endEffectiveDate) {
    
    
    
    this.endEffectiveDate = endEffectiveDate;
  }


  public ClientAddressVersion modifiedDate(OffsetDateTime modifiedDate) {
    
    
    
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  public void setModifiedDate(OffsetDateTime modifiedDate) {
    
    
    
    this.modifiedDate = modifiedDate;
  }


  public ClientAddressVersion stateProvince(String stateProvince) {
    
    
    
    
    this.stateProvince = stateProvince;
    return this;
  }

   /**
   * Get stateProvince
   * @return stateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStateProvince() {
    return stateProvince;
  }


  public void setStateProvince(String stateProvince) {
    
    
    
    this.stateProvince = stateProvince;
  }


  public ClientAddressVersion stateProvinceF(String stateProvinceF) {
    
    
    
    
    this.stateProvinceF = stateProvinceF;
    return this;
  }

   /**
   * Get stateProvinceF
   * @return stateProvinceF
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStateProvinceF() {
    return stateProvinceF;
  }


  public void setStateProvinceF(String stateProvinceF) {
    
    
    
    this.stateProvinceF = stateProvinceF;
  }


  public ClientAddressVersion portalCode(String portalCode) {
    
    
    
    
    this.portalCode = portalCode;
    return this;
  }

   /**
   * Get portalCode
   * @return portalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPortalCode() {
    return portalCode;
  }


  public void setPortalCode(String portalCode) {
    
    
    
    this.portalCode = portalCode;
  }


  public ClientAddressVersion countryCode(String countryCode) {
    
    
    
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    
    
    
    this.countryCode = countryCode;
  }


  public ClientAddressVersion buildingNumber(String buildingNumber) {
    
    
    
    
    this.buildingNumber = buildingNumber;
    return this;
  }

   /**
   * Get buildingNumber
   * @return buildingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBuildingNumber() {
    return buildingNumber;
  }


  public void setBuildingNumber(String buildingNumber) {
    
    
    
    this.buildingNumber = buildingNumber;
  }


  public ClientAddressVersion unitName(String unitName) {
    
    
    
    
    this.unitName = unitName;
    return this;
  }

   /**
   * Get unitName
   * @return unitName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitName() {
    return unitName;
  }


  public void setUnitName(String unitName) {
    
    
    
    this.unitName = unitName;
  }


  public ClientAddressVersion streetName(String streetName) {
    
    
    
    
    this.streetName = streetName;
    return this;
  }

   /**
   * Get streetName
   * @return streetName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStreetName() {
    return streetName;
  }


  public void setStreetName(String streetName) {
    
    
    
    this.streetName = streetName;
  }


  public ClientAddressVersion poBox(String poBox) {
    
    
    
    
    this.poBox = poBox;
    return this;
  }

   /**
   * Get poBox
   * @return poBox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPoBox() {
    return poBox;
  }


  public void setPoBox(String poBox) {
    
    
    
    this.poBox = poBox;
  }


  public ClientAddressVersion streetAddressOne(String streetAddressOne) {
    
    
    
    
    this.streetAddressOne = streetAddressOne;
    return this;
  }

   /**
   * Get streetAddressOne
   * @return streetAddressOne
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStreetAddressOne() {
    return streetAddressOne;
  }


  public void setStreetAddressOne(String streetAddressOne) {
    
    
    
    this.streetAddressOne = streetAddressOne;
  }


  public ClientAddressVersion streetAddressTwo(String streetAddressTwo) {
    
    
    
    
    this.streetAddressTwo = streetAddressTwo;
    return this;
  }

   /**
   * Get streetAddressTwo
   * @return streetAddressTwo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStreetAddressTwo() {
    return streetAddressTwo;
  }


  public void setStreetAddressTwo(String streetAddressTwo) {
    
    
    
    this.streetAddressTwo = streetAddressTwo;
  }


  public ClientAddressVersion modifedByApplicationName(String modifedByApplicationName) {
    
    
    
    
    this.modifedByApplicationName = modifedByApplicationName;
    return this;
  }

   /**
   * Get modifedByApplicationName
   * @return modifedByApplicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifedByApplicationName() {
    return modifedByApplicationName;
  }


  public void setModifedByApplicationName(String modifedByApplicationName) {
    
    
    
    this.modifedByApplicationName = modifedByApplicationName;
  }


  public ClientAddressVersion modifiedByApplicationSubProcessName(String modifiedByApplicationSubProcessName) {
    
    
    
    
    this.modifiedByApplicationSubProcessName = modifiedByApplicationSubProcessName;
    return this;
  }

   /**
   * Get modifiedByApplicationSubProcessName
   * @return modifiedByApplicationSubProcessName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByApplicationSubProcessName() {
    return modifiedByApplicationSubProcessName;
  }


  public void setModifiedByApplicationSubProcessName(String modifiedByApplicationSubProcessName) {
    
    
    
    this.modifiedByApplicationSubProcessName = modifiedByApplicationSubProcessName;
  }


  public ClientAddressVersion modifiedByUserId(String modifiedByUserId) {
    
    
    
    
    this.modifiedByUserId = modifiedByUserId;
    return this;
  }

   /**
   * Get modifiedByUserId
   * @return modifiedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByUserId() {
    return modifiedByUserId;
  }


  public void setModifiedByUserId(String modifiedByUserId) {
    
    
    
    this.modifiedByUserId = modifiedByUserId;
  }


  public ClientAddressVersion clientAddress(ClientAddress clientAddress) {
    
    
    
    
    this.clientAddress = clientAddress;
    return this;
  }

   /**
   * Get clientAddress
   * @return clientAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClientAddress getClientAddress() {
    return clientAddress;
  }


  public void setClientAddress(ClientAddress clientAddress) {
    
    
    
    this.clientAddress = clientAddress;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ClientAddressVersion instance itself
   */
  public ClientAddressVersion putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientAddressVersion clientAddressVersion = (ClientAddressVersion) o;
    return Objects.equals(this.id, clientAddressVersion.id) &&
        Objects.equals(this.city, clientAddressVersion.city) &&
        Objects.equals(this.valStateCode, clientAddressVersion.valStateCode) &&
        Objects.equals(this.verStateCode, clientAddressVersion.verStateCode) &&
        Objects.equals(this.beginEffectiveDate, clientAddressVersion.beginEffectiveDate) &&
        Objects.equals(this.endEffectiveDate, clientAddressVersion.endEffectiveDate) &&
        Objects.equals(this.modifiedDate, clientAddressVersion.modifiedDate) &&
        Objects.equals(this.stateProvince, clientAddressVersion.stateProvince) &&
        Objects.equals(this.stateProvinceF, clientAddressVersion.stateProvinceF) &&
        Objects.equals(this.portalCode, clientAddressVersion.portalCode) &&
        Objects.equals(this.countryCode, clientAddressVersion.countryCode) &&
        Objects.equals(this.buildingNumber, clientAddressVersion.buildingNumber) &&
        Objects.equals(this.unitName, clientAddressVersion.unitName) &&
        Objects.equals(this.streetName, clientAddressVersion.streetName) &&
        Objects.equals(this.poBox, clientAddressVersion.poBox) &&
        Objects.equals(this.streetAddressOne, clientAddressVersion.streetAddressOne) &&
        Objects.equals(this.streetAddressTwo, clientAddressVersion.streetAddressTwo) &&
        Objects.equals(this.modifedByApplicationName, clientAddressVersion.modifedByApplicationName) &&
        Objects.equals(this.modifiedByApplicationSubProcessName, clientAddressVersion.modifiedByApplicationSubProcessName) &&
        Objects.equals(this.modifiedByUserId, clientAddressVersion.modifiedByUserId) &&
        Objects.equals(this.clientAddress, clientAddressVersion.clientAddress)&&
        Objects.equals(this.additionalProperties, clientAddressVersion.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, city, valStateCode, verStateCode, beginEffectiveDate, endEffectiveDate, modifiedDate, stateProvince, stateProvinceF, portalCode, countryCode, buildingNumber, unitName, streetName, poBox, streetAddressOne, streetAddressTwo, modifedByApplicationName, modifiedByApplicationSubProcessName, modifiedByUserId, clientAddress, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientAddressVersion {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    valStateCode: ").append(toIndentedString(valStateCode)).append("\n");
    sb.append("    verStateCode: ").append(toIndentedString(verStateCode)).append("\n");
    sb.append("    beginEffectiveDate: ").append(toIndentedString(beginEffectiveDate)).append("\n");
    sb.append("    endEffectiveDate: ").append(toIndentedString(endEffectiveDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    stateProvinceF: ").append(toIndentedString(stateProvinceF)).append("\n");
    sb.append("    portalCode: ").append(toIndentedString(portalCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    buildingNumber: ").append(toIndentedString(buildingNumber)).append("\n");
    sb.append("    unitName: ").append(toIndentedString(unitName)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    poBox: ").append(toIndentedString(poBox)).append("\n");
    sb.append("    streetAddressOne: ").append(toIndentedString(streetAddressOne)).append("\n");
    sb.append("    streetAddressTwo: ").append(toIndentedString(streetAddressTwo)).append("\n");
    sb.append("    modifedByApplicationName: ").append(toIndentedString(modifedByApplicationName)).append("\n");
    sb.append("    modifiedByApplicationSubProcessName: ").append(toIndentedString(modifiedByApplicationSubProcessName)).append("\n");
    sb.append("    modifiedByUserId: ").append(toIndentedString(modifiedByUserId)).append("\n");
    sb.append("    clientAddress: ").append(toIndentedString(clientAddress)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("city");
    openapiFields.add("valStateCode");
    openapiFields.add("verStateCode");
    openapiFields.add("beginEffectiveDate");
    openapiFields.add("endEffectiveDate");
    openapiFields.add("modifiedDate");
    openapiFields.add("stateProvince");
    openapiFields.add("stateProvinceF");
    openapiFields.add("portalCode");
    openapiFields.add("countryCode");
    openapiFields.add("buildingNumber");
    openapiFields.add("unitName");
    openapiFields.add("streetName");
    openapiFields.add("poBox");
    openapiFields.add("streetAddressOne");
    openapiFields.add("streetAddressTwo");
    openapiFields.add("modifedByApplicationName");
    openapiFields.add("modifiedByApplicationSubProcessName");
    openapiFields.add("modifiedByUserId");
    openapiFields.add("clientAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ClientAddressVersion
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ClientAddressVersion.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClientAddressVersion is not found in the empty JSON string", ClientAddressVersion.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("valStateCode") != null && !jsonObj.get("valStateCode").isJsonNull()) && !jsonObj.get("valStateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valStateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valStateCode").toString()));
      }
      if ((jsonObj.get("verStateCode") != null && !jsonObj.get("verStateCode").isJsonNull()) && !jsonObj.get("verStateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verStateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verStateCode").toString()));
      }
      if ((jsonObj.get("stateProvince") != null && !jsonObj.get("stateProvince").isJsonNull()) && !jsonObj.get("stateProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateProvince").toString()));
      }
      if ((jsonObj.get("stateProvinceF") != null && !jsonObj.get("stateProvinceF").isJsonNull()) && !jsonObj.get("stateProvinceF").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateProvinceF` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateProvinceF").toString()));
      }
      if ((jsonObj.get("portalCode") != null && !jsonObj.get("portalCode").isJsonNull()) && !jsonObj.get("portalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portalCode").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("buildingNumber") != null && !jsonObj.get("buildingNumber").isJsonNull()) && !jsonObj.get("buildingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildingNumber").toString()));
      }
      if ((jsonObj.get("unitName") != null && !jsonObj.get("unitName").isJsonNull()) && !jsonObj.get("unitName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitName").toString()));
      }
      if ((jsonObj.get("streetName") != null && !jsonObj.get("streetName").isJsonNull()) && !jsonObj.get("streetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetName").toString()));
      }
      if ((jsonObj.get("poBox") != null && !jsonObj.get("poBox").isJsonNull()) && !jsonObj.get("poBox").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `poBox` to be a primitive type in the JSON string but got `%s`", jsonObj.get("poBox").toString()));
      }
      if ((jsonObj.get("streetAddressOne") != null && !jsonObj.get("streetAddressOne").isJsonNull()) && !jsonObj.get("streetAddressOne").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetAddressOne` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetAddressOne").toString()));
      }
      if ((jsonObj.get("streetAddressTwo") != null && !jsonObj.get("streetAddressTwo").isJsonNull()) && !jsonObj.get("streetAddressTwo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streetAddressTwo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streetAddressTwo").toString()));
      }
      if ((jsonObj.get("modifedByApplicationName") != null && !jsonObj.get("modifedByApplicationName").isJsonNull()) && !jsonObj.get("modifedByApplicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifedByApplicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifedByApplicationName").toString()));
      }
      if ((jsonObj.get("modifiedByApplicationSubProcessName") != null && !jsonObj.get("modifiedByApplicationSubProcessName").isJsonNull()) && !jsonObj.get("modifiedByApplicationSubProcessName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedByApplicationSubProcessName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedByApplicationSubProcessName").toString()));
      }
      if ((jsonObj.get("modifiedByUserId") != null && !jsonObj.get("modifiedByUserId").isJsonNull()) && !jsonObj.get("modifiedByUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedByUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedByUserId").toString()));
      }
      // validate the optional field `clientAddress`
      if (jsonObj.get("clientAddress") != null && !jsonObj.get("clientAddress").isJsonNull()) {
        ClientAddress.validateJsonObject(jsonObj.getAsJsonObject("clientAddress"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientAddressVersion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientAddressVersion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientAddressVersion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientAddressVersion.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientAddressVersion>() {
           @Override
           public void write(JsonWriter out, ClientAddressVersion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientAddressVersion read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ClientAddressVersion instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ClientAddressVersion given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ClientAddressVersion
  * @throws IOException if the JSON string is invalid with respect to ClientAddressVersion
  */
  public static ClientAddressVersion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientAddressVersion.class);
  }

 /**
  * Convert an instance of ClientAddressVersion to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

