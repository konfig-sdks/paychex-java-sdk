/*
 * External API
 *   # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WorkerCustomFieldsResource
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WorkerCustomFieldsResource {
  public static final String SERIALIZED_NAME_WORKER_CUSTOM_FIELD_ID = "workerCustomFieldId";
  @SerializedName(SERIALIZED_NAME_WORKER_CUSTOM_FIELD_ID)
  private String workerCustomFieldId;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_ID = "customFieldId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_ID)
  private String customFieldId;

  /**
   * The type of field the custom field is
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    DROPDOWN("DROPDOWN"),
    
    TEXT("TEXT"),
    
    BOOLEAN("BOOLEAN"),
    
    DATE("DATE"),
    
    NUMERIC_NUMERIC__0_00__OR_NUMERIC__0_0000_("NUMERIC, NUMERIC__0_00_ OR NUMERIC__0_0000_");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_BOOLEAN_VALUE = "booleanValue";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_VALUE)
  private Boolean booleanValue;

  public static final String SERIALIZED_NAME_TEXT_VALUE = "textValue";
  @SerializedName(SERIALIZED_NAME_TEXT_VALUE)
  private String textValue;

  public static final String SERIALIZED_NAME_NUMERIC_VALUE = "numericValue";
  @SerializedName(SERIALIZED_NAME_NUMERIC_VALUE)
  private Double numericValue;

  public static final String SERIALIZED_NAME_DATE_VALUE = "dateValue";
  @SerializedName(SERIALIZED_NAME_DATE_VALUE)
  private OffsetDateTime dateValue;

  public static final String SERIALIZED_NAME_DROPDOWN_ID = "dropdownId";
  @SerializedName(SERIALIZED_NAME_DROPDOWN_ID)
  private String dropdownId;

  public static final String SERIALIZED_NAME_DROPDOWN_VALUE = "dropdownValue";
  @SerializedName(SERIALIZED_NAME_DROPDOWN_VALUE)
  private String dropdownValue;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_NAME = "customFieldName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_NAME)
  private String customFieldName;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_CHECK_STUB = "checkStub";
  @SerializedName(SERIALIZED_NAME_CHECK_STUB)
  private Boolean checkStub;

  public static final String SERIALIZED_NAME_EMPLOYEE_EDITABLE = "employeeEditable";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_EDITABLE)
  private Boolean employeeEditable;

  public WorkerCustomFieldsResource() {
  }

  public WorkerCustomFieldsResource workerCustomFieldId(String workerCustomFieldId) {
    
    
    
    
    this.workerCustomFieldId = workerCustomFieldId;
    return this;
  }

   /**
   * The unique identifier that is autogenerated when a custom field is created
   * @return workerCustomFieldId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier that is autogenerated when a custom field is created")

  public String getWorkerCustomFieldId() {
    return workerCustomFieldId;
  }


  public void setWorkerCustomFieldId(String workerCustomFieldId) {
    
    
    
    this.workerCustomFieldId = workerCustomFieldId;
  }


  public WorkerCustomFieldsResource customFieldId(String customFieldId) {
    
    
    
    
    this.customFieldId = customFieldId;
    return this;
  }

   /**
   * client Custom Field Id
   * @return customFieldId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "client Custom Field Id")

  public String getCustomFieldId() {
    return customFieldId;
  }


  public void setCustomFieldId(String customFieldId) {
    
    
    
    this.customFieldId = customFieldId;
  }


  public WorkerCustomFieldsResource type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The type of field the custom field is
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of field the custom field is")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public WorkerCustomFieldsResource booleanValue(Boolean booleanValue) {
    
    
    
    
    this.booleanValue = booleanValue;
    return this;
  }

   /**
   * The value for BOOLEAN type (true/false)
   * @return booleanValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for BOOLEAN type (true/false)")

  public Boolean getBooleanValue() {
    return booleanValue;
  }


  public void setBooleanValue(Boolean booleanValue) {
    
    
    
    this.booleanValue = booleanValue;
  }


  public WorkerCustomFieldsResource textValue(String textValue) {
    
    
    
    
    this.textValue = textValue;
    return this;
  }

   /**
   * The value for TEXT type (any text, alphanumeric, special characters allowed)
   * @return textValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for TEXT type (any text, alphanumeric, special characters allowed)")

  public String getTextValue() {
    return textValue;
  }


  public void setTextValue(String textValue) {
    
    
    
    this.textValue = textValue;
  }


  public WorkerCustomFieldsResource numericValue(Double numericValue) {
    
    
    
    
    this.numericValue = numericValue;
    return this;
  }

  public WorkerCustomFieldsResource numericValue(Integer numericValue) {
    
    
    
    
    this.numericValue = numericValue.doubleValue();
    return this;
  }

   /**
   * Numeric data type can have three formats namely - whole number, second decimal place and fourth decimal place, example: 12 , 12.34 or 12.3456
   * @return numericValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Numeric data type can have three formats namely - whole number, second decimal place and fourth decimal place, example: 12 , 12.34 or 12.3456")

  public Double getNumericValue() {
    return numericValue;
  }


  public void setNumericValue(Double numericValue) {
    
    
    
    this.numericValue = numericValue;
  }


  public WorkerCustomFieldsResource dateValue(OffsetDateTime dateValue) {
    
    
    
    
    this.dateValue = dateValue;
    return this;
  }

   /**
   * The value for DATE type , example : 2012-02-01T05:00:00Z
   * @return dateValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for DATE type , example : 2012-02-01T05:00:00Z")

  public OffsetDateTime getDateValue() {
    return dateValue;
  }


  public void setDateValue(OffsetDateTime dateValue) {
    
    
    
    this.dateValue = dateValue;
  }


  public WorkerCustomFieldsResource dropdownId(String dropdownId) {
    
    
    
    
    this.dropdownId = dropdownId;
    return this;
  }

   /**
   * The unique identifier that is autogenerated when dropdown list is created
   * @return dropdownId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier that is autogenerated when dropdown list is created")

  public String getDropdownId() {
    return dropdownId;
  }


  public void setDropdownId(String dropdownId) {
    
    
    
    this.dropdownId = dropdownId;
  }


  public WorkerCustomFieldsResource dropdownValue(String dropdownValue) {
    
    
    
    
    this.dropdownValue = dropdownValue;
    return this;
  }

   /**
   * The value for dropdown list
   * @return dropdownValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for dropdown list")

  public String getDropdownValue() {
    return dropdownValue;
  }


  public void setDropdownValue(String dropdownValue) {
    
    
    
    this.dropdownValue = dropdownValue;
  }


  public WorkerCustomFieldsResource customFieldName(String customFieldName) {
    
    
    
    
    this.customFieldName = customFieldName;
    return this;
  }

   /**
   * The name of the custom field. Such as: \&quot;Hobbies\&quot;
   * @return customFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the custom field. Such as: \"Hobbies\"")

  public String getCustomFieldName() {
    return customFieldName;
  }


  public void setCustomFieldName(String customFieldName) {
    
    
    
    this.customFieldName = customFieldName;
  }


  public WorkerCustomFieldsResource required(Boolean required) {
    
    
    
    
    this.required = required;
    return this;
  }

   /**
   * Where to indicate if the custom field is required on the worker where true &#x3D; required and false &#x3D; not required
   * @return required
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Where to indicate if the custom field is required on the worker where true = required and false = not required")

  public Boolean getRequired() {
    return required;
  }


  public void setRequired(Boolean required) {
    
    
    
    this.required = required;
  }


  public WorkerCustomFieldsResource checkStub(Boolean checkStub) {
    
    
    
    
    this.checkStub = checkStub;
    return this;
  }

   /**
   * Where to indicate if the custom field is required on the workers pay stub, where true &#x3D; required and false &#x3D; not required.
   * @return checkStub
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Where to indicate if the custom field is required on the workers pay stub, where true = required and false = not required.")

  public Boolean getCheckStub() {
    return checkStub;
  }


  public void setCheckStub(Boolean checkStub) {
    
    
    
    this.checkStub = checkStub;
  }


  public WorkerCustomFieldsResource employeeEditable(Boolean employeeEditable) {
    
    
    
    
    this.employeeEditable = employeeEditable;
    return this;
  }

   /**
   * Where to indicate if the custom field is able to be edited by the employee, where true &#x3D; required and false &#x3D; not required.
   * @return employeeEditable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Where to indicate if the custom field is able to be edited by the employee, where true = required and false = not required.")

  public Boolean getEmployeeEditable() {
    return employeeEditable;
  }


  public void setEmployeeEditable(Boolean employeeEditable) {
    
    
    
    this.employeeEditable = employeeEditable;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WorkerCustomFieldsResource instance itself
   */
  public WorkerCustomFieldsResource putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkerCustomFieldsResource workerCustomFieldsResource = (WorkerCustomFieldsResource) o;
    return Objects.equals(this.workerCustomFieldId, workerCustomFieldsResource.workerCustomFieldId) &&
        Objects.equals(this.customFieldId, workerCustomFieldsResource.customFieldId) &&
        Objects.equals(this.type, workerCustomFieldsResource.type) &&
        Objects.equals(this.booleanValue, workerCustomFieldsResource.booleanValue) &&
        Objects.equals(this.textValue, workerCustomFieldsResource.textValue) &&
        Objects.equals(this.numericValue, workerCustomFieldsResource.numericValue) &&
        Objects.equals(this.dateValue, workerCustomFieldsResource.dateValue) &&
        Objects.equals(this.dropdownId, workerCustomFieldsResource.dropdownId) &&
        Objects.equals(this.dropdownValue, workerCustomFieldsResource.dropdownValue) &&
        Objects.equals(this.customFieldName, workerCustomFieldsResource.customFieldName) &&
        Objects.equals(this.required, workerCustomFieldsResource.required) &&
        Objects.equals(this.checkStub, workerCustomFieldsResource.checkStub) &&
        Objects.equals(this.employeeEditable, workerCustomFieldsResource.employeeEditable)&&
        Objects.equals(this.additionalProperties, workerCustomFieldsResource.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workerCustomFieldId, customFieldId, type, booleanValue, textValue, numericValue, dateValue, dropdownId, dropdownValue, customFieldName, required, checkStub, employeeEditable, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkerCustomFieldsResource {\n");
    sb.append("    workerCustomFieldId: ").append(toIndentedString(workerCustomFieldId)).append("\n");
    sb.append("    customFieldId: ").append(toIndentedString(customFieldId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    textValue: ").append(toIndentedString(textValue)).append("\n");
    sb.append("    numericValue: ").append(toIndentedString(numericValue)).append("\n");
    sb.append("    dateValue: ").append(toIndentedString(dateValue)).append("\n");
    sb.append("    dropdownId: ").append(toIndentedString(dropdownId)).append("\n");
    sb.append("    dropdownValue: ").append(toIndentedString(dropdownValue)).append("\n");
    sb.append("    customFieldName: ").append(toIndentedString(customFieldName)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    checkStub: ").append(toIndentedString(checkStub)).append("\n");
    sb.append("    employeeEditable: ").append(toIndentedString(employeeEditable)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("workerCustomFieldId");
    openapiFields.add("customFieldId");
    openapiFields.add("type");
    openapiFields.add("booleanValue");
    openapiFields.add("textValue");
    openapiFields.add("numericValue");
    openapiFields.add("dateValue");
    openapiFields.add("dropdownId");
    openapiFields.add("dropdownValue");
    openapiFields.add("customFieldName");
    openapiFields.add("required");
    openapiFields.add("checkStub");
    openapiFields.add("employeeEditable");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkerCustomFieldsResource
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkerCustomFieldsResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkerCustomFieldsResource is not found in the empty JSON string", WorkerCustomFieldsResource.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("workerCustomFieldId") != null && !jsonObj.get("workerCustomFieldId").isJsonNull()) && !jsonObj.get("workerCustomFieldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workerCustomFieldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workerCustomFieldId").toString()));
      }
      if ((jsonObj.get("customFieldId") != null && !jsonObj.get("customFieldId").isJsonNull()) && !jsonObj.get("customFieldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldId").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("textValue") != null && !jsonObj.get("textValue").isJsonNull()) && !jsonObj.get("textValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `textValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("textValue").toString()));
      }
      if ((jsonObj.get("dropdownId") != null && !jsonObj.get("dropdownId").isJsonNull()) && !jsonObj.get("dropdownId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dropdownId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dropdownId").toString()));
      }
      if ((jsonObj.get("dropdownValue") != null && !jsonObj.get("dropdownValue").isJsonNull()) && !jsonObj.get("dropdownValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dropdownValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dropdownValue").toString()));
      }
      if ((jsonObj.get("customFieldName") != null && !jsonObj.get("customFieldName").isJsonNull()) && !jsonObj.get("customFieldName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkerCustomFieldsResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkerCustomFieldsResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkerCustomFieldsResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkerCustomFieldsResource.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkerCustomFieldsResource>() {
           @Override
           public void write(JsonWriter out, WorkerCustomFieldsResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkerCustomFieldsResource read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WorkerCustomFieldsResource instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkerCustomFieldsResource given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkerCustomFieldsResource
  * @throws IOException if the JSON string is invalid with respect to WorkerCustomFieldsResource
  */
  public static WorkerCustomFieldsResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkerCustomFieldsResource.class);
  }

 /**
  * Convert an instance of WorkerCustomFieldsResource to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

