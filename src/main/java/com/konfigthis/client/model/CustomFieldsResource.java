/*
 * External API
 *   # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldsDropdownResource;
import com.konfigthis.client.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomFieldsResource
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomFieldsResource {
  public static final String SERIALIZED_NAME_CUSTOM_FIELD_ID = "customFieldId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_ID)
  private String customFieldId;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_NAME = "customFieldName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_NAME)
  private String customFieldName;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_CHECK_STUB = "checkStub";
  @SerializedName(SERIALIZED_NAME_CHECK_STUB)
  private Boolean checkStub;

  public static final String SERIALIZED_NAME_EMPLOYEE_EDITABLE = "employeeEditable";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_EDITABLE)
  private Boolean employeeEditable;

  /**
   * The type of field the custom field is.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
 public enum TypeEnum {
    DROPDOWN("DROPDOWN"),
    
    TEXT("TEXT"),
    
    BOOLEAN("BOOLEAN"),
    
    DATE("DATE"),
    
    NUMERIC_NUMERIC__0_00__OR_NUMERIC__0_0000_("NUMERIC, NUMERIC__0_00_ OR NUMERIC__0_0000_");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_BOOLEAN_VALUE = "booleanValue";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_VALUE)
  private Boolean booleanValue;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<Link> links = null;

  public static final String SERIALIZED_NAME_DATE_VALUE = "dateValue";
  @SerializedName(SERIALIZED_NAME_DATE_VALUE)
  private OffsetDateTime dateValue;

  public static final String SERIALIZED_NAME_TEXT_VALUE = "textValue";
  @SerializedName(SERIALIZED_NAME_TEXT_VALUE)
  private String textValue;

  public static final String SERIALIZED_NAME_MAX_TEXT_LENGTH = "maxTextLength";
  @SerializedName(SERIALIZED_NAME_MAX_TEXT_LENGTH)
  private Double maxTextLength;

  public static final String SERIALIZED_NAME_NUMERIC_VALUE = "numericValue";
  @SerializedName(SERIALIZED_NAME_NUMERIC_VALUE)
  private Double numericValue;

  public static final String SERIALIZED_NAME_DROPDOWN = "dropdown";
  @SerializedName(SERIALIZED_NAME_DROPDOWN)
  private List<CustomFieldsDropdownResource> dropdown = null;

  public CustomFieldsResource() {
  }

  
  public CustomFieldsResource(
     String customFieldId
  ) {
    this();
    this.customFieldId = customFieldId;
  }

   /**
   * The unique identifier that is autogenerated when a custom field is created
   * @return customFieldId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1040014203417589", value = "The unique identifier that is autogenerated when a custom field is created")

  public String getCustomFieldId() {
    return customFieldId;
  }




  public CustomFieldsResource customFieldName(String customFieldName) {
    
    
    
    
    this.customFieldName = customFieldName;
    return this;
  }

   /**
   * The name of the custom field
   * @return customFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Hobbies", value = "The name of the custom field")

  public String getCustomFieldName() {
    return customFieldName;
  }


  public void setCustomFieldName(String customFieldName) {
    
    
    
    this.customFieldName = customFieldName;
  }


  public CustomFieldsResource categoryId(String categoryId) {
    
    
    
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The unique identifier that is autogenerated when creating a category
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1040014179116276", value = "The unique identifier that is autogenerated when creating a category")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    
    
    
    this.categoryId = categoryId;
  }


  public CustomFieldsResource required(Boolean required) {
    
    
    
    
    this.required = required;
    return this;
  }

   /**
   * Where to indicate if the custom field is required on the worker where true &#x3D; required and false &#x3D; not required
   * @return required
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Where to indicate if the custom field is required on the worker where true = required and false = not required")

  public Boolean getRequired() {
    return required;
  }


  public void setRequired(Boolean required) {
    
    
    
    this.required = required;
  }


  public CustomFieldsResource checkStub(Boolean checkStub) {
    
    
    
    
    this.checkStub = checkStub;
    return this;
  }

   /**
   * Where to indicate if the custom field is required on the worker&#39;s pay stub, where true &#x3D; required and false &#x3D; not required
   * @return checkStub
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Where to indicate if the custom field is required on the worker's pay stub, where true = required and false = not required")

  public Boolean getCheckStub() {
    return checkStub;
  }


  public void setCheckStub(Boolean checkStub) {
    
    
    
    this.checkStub = checkStub;
  }


  public CustomFieldsResource employeeEditable(Boolean employeeEditable) {
    
    
    
    
    this.employeeEditable = employeeEditable;
    return this;
  }

   /**
   * Where to indicate if the custom field is able to be edited by the employee, where true &#x3D; required and false &#x3D; not required
   * @return employeeEditable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Where to indicate if the custom field is able to be edited by the employee, where true = required and false = not required")

  public Boolean getEmployeeEditable() {
    return employeeEditable;
  }


  public void setEmployeeEditable(Boolean employeeEditable) {
    
    
    
    this.employeeEditable = employeeEditable;
  }


  public CustomFieldsResource type(TypeEnum type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The type of field the custom field is.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DROPDOWN", value = "The type of field the custom field is.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    
    
    
    this.type = type;
  }


  public CustomFieldsResource booleanValue(Boolean booleanValue) {
    
    
    
    
    this.booleanValue = booleanValue;
    return this;
  }

   /**
   * The value for BOOLEAN type (true / false)
   * @return booleanValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for BOOLEAN type (true / false)")

  public Boolean getBooleanValue() {
    return booleanValue;
  }


  public void setBooleanValue(Boolean booleanValue) {
    
    
    
    this.booleanValue = booleanValue;
  }


  public CustomFieldsResource links(List<Link> links) {
    
    
    
    
    this.links = links;
    return this;
  }

  public CustomFieldsResource addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Link> getLinks() {
    return links;
  }


  public void setLinks(List<Link> links) {
    
    
    
    this.links = links;
  }


  public CustomFieldsResource dateValue(OffsetDateTime dateValue) {
    
    
    
    
    this.dateValue = dateValue;
    return this;
  }

   /**
   * The value for DATE type , example : 2012-02-01T05:00:00Z
   * @return dateValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for DATE type , example : 2012-02-01T05:00:00Z")

  public OffsetDateTime getDateValue() {
    return dateValue;
  }


  public void setDateValue(OffsetDateTime dateValue) {
    
    
    
    this.dateValue = dateValue;
  }


  public CustomFieldsResource textValue(String textValue) {
    
    
    
    
    this.textValue = textValue;
    return this;
  }

   /**
   * The value for TEXT type (any text, alphanumeric, special characters allowed)
   * @return textValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value for TEXT type (any text, alphanumeric, special characters allowed)")

  public String getTextValue() {
    return textValue;
  }


  public void setTextValue(String textValue) {
    
    
    
    this.textValue = textValue;
  }


  public CustomFieldsResource maxTextLength(Double maxTextLength) {
    
    
    
    
    this.maxTextLength = maxTextLength;
    return this;
  }

  public CustomFieldsResource maxTextLength(Integer maxTextLength) {
    
    
    
    
    this.maxTextLength = maxTextLength.doubleValue();
    return this;
  }

   /**
   * The maximum allowed value for textValue
   * @return maxTextLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum allowed value for textValue")

  public Double getMaxTextLength() {
    return maxTextLength;
  }


  public void setMaxTextLength(Double maxTextLength) {
    
    
    
    this.maxTextLength = maxTextLength;
  }


  public CustomFieldsResource numericValue(Double numericValue) {
    
    
    
    
    this.numericValue = numericValue;
    return this;
  }

  public CustomFieldsResource numericValue(Integer numericValue) {
    
    
    
    
    this.numericValue = numericValue.doubleValue();
    return this;
  }

   /**
   * Numeric data type can have three formats namely - whole number, second decimal place and fourth decimal place, example: 12 , 12.34 or 12.3456
   * @return numericValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Numeric data type can have three formats namely - whole number, second decimal place and fourth decimal place, example: 12 , 12.34 or 12.3456")

  public Double getNumericValue() {
    return numericValue;
  }


  public void setNumericValue(Double numericValue) {
    
    
    
    this.numericValue = numericValue;
  }


  public CustomFieldsResource dropdown(List<CustomFieldsDropdownResource> dropdown) {
    
    
    
    
    this.dropdown = dropdown;
    return this;
  }

  public CustomFieldsResource addDropdownItem(CustomFieldsDropdownResource dropdownItem) {
    if (this.dropdown == null) {
      this.dropdown = new ArrayList<>();
    }
    this.dropdown.add(dropdownItem);
    return this;
  }

   /**
   * Get dropdown
   * @return dropdown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomFieldsDropdownResource> getDropdown() {
    return dropdown;
  }


  public void setDropdown(List<CustomFieldsDropdownResource> dropdown) {
    
    
    
    this.dropdown = dropdown;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomFieldsResource instance itself
   */
  public CustomFieldsResource putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldsResource customFieldsResource = (CustomFieldsResource) o;
    return Objects.equals(this.customFieldId, customFieldsResource.customFieldId) &&
        Objects.equals(this.customFieldName, customFieldsResource.customFieldName) &&
        Objects.equals(this.categoryId, customFieldsResource.categoryId) &&
        Objects.equals(this.required, customFieldsResource.required) &&
        Objects.equals(this.checkStub, customFieldsResource.checkStub) &&
        Objects.equals(this.employeeEditable, customFieldsResource.employeeEditable) &&
        Objects.equals(this.type, customFieldsResource.type) &&
        Objects.equals(this.booleanValue, customFieldsResource.booleanValue) &&
        Objects.equals(this.links, customFieldsResource.links) &&
        Objects.equals(this.dateValue, customFieldsResource.dateValue) &&
        Objects.equals(this.textValue, customFieldsResource.textValue) &&
        Objects.equals(this.maxTextLength, customFieldsResource.maxTextLength) &&
        Objects.equals(this.numericValue, customFieldsResource.numericValue) &&
        Objects.equals(this.dropdown, customFieldsResource.dropdown)&&
        Objects.equals(this.additionalProperties, customFieldsResource.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customFieldId, customFieldName, categoryId, required, checkStub, employeeEditable, type, booleanValue, links, dateValue, textValue, maxTextLength, numericValue, dropdown, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldsResource {\n");
    sb.append("    customFieldId: ").append(toIndentedString(customFieldId)).append("\n");
    sb.append("    customFieldName: ").append(toIndentedString(customFieldName)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    checkStub: ").append(toIndentedString(checkStub)).append("\n");
    sb.append("    employeeEditable: ").append(toIndentedString(employeeEditable)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    dateValue: ").append(toIndentedString(dateValue)).append("\n");
    sb.append("    textValue: ").append(toIndentedString(textValue)).append("\n");
    sb.append("    maxTextLength: ").append(toIndentedString(maxTextLength)).append("\n");
    sb.append("    numericValue: ").append(toIndentedString(numericValue)).append("\n");
    sb.append("    dropdown: ").append(toIndentedString(dropdown)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customFieldId");
    openapiFields.add("customFieldName");
    openapiFields.add("categoryId");
    openapiFields.add("required");
    openapiFields.add("checkStub");
    openapiFields.add("employeeEditable");
    openapiFields.add("type");
    openapiFields.add("booleanValue");
    openapiFields.add("links");
    openapiFields.add("dateValue");
    openapiFields.add("textValue");
    openapiFields.add("maxTextLength");
    openapiFields.add("numericValue");
    openapiFields.add("dropdown");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomFieldsResource
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomFieldsResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomFieldsResource is not found in the empty JSON string", CustomFieldsResource.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("customFieldId") != null && !jsonObj.get("customFieldId").isJsonNull()) && !jsonObj.get("customFieldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldId").toString()));
      }
      if ((jsonObj.get("customFieldName") != null && !jsonObj.get("customFieldName").isJsonNull()) && !jsonObj.get("customFieldName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customFieldName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customFieldName").toString()));
      }
      if ((jsonObj.get("categoryId") != null && !jsonObj.get("categoryId").isJsonNull()) && !jsonObj.get("categoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryId").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (jsonObj.get("links") != null && !jsonObj.get("links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `links` to be an array in the JSON string but got `%s`", jsonObj.get("links").toString()));
          }

          // validate the optional field `links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            Link.validateJsonObject(jsonArraylinks.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("textValue") != null && !jsonObj.get("textValue").isJsonNull()) && !jsonObj.get("textValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `textValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("textValue").toString()));
      }
      if (jsonObj.get("dropdown") != null && !jsonObj.get("dropdown").isJsonNull()) {
        JsonArray jsonArraydropdown = jsonObj.getAsJsonArray("dropdown");
        if (jsonArraydropdown != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dropdown").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dropdown` to be an array in the JSON string but got `%s`", jsonObj.get("dropdown").toString()));
          }

          // validate the optional field `dropdown` (array)
          for (int i = 0; i < jsonArraydropdown.size(); i++) {
            CustomFieldsDropdownResource.validateJsonObject(jsonArraydropdown.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomFieldsResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomFieldsResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomFieldsResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomFieldsResource.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomFieldsResource>() {
           @Override
           public void write(JsonWriter out, CustomFieldsResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomFieldsResource read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomFieldsResource instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomFieldsResource given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomFieldsResource
  * @throws IOException if the JSON string is invalid with respect to CustomFieldsResource
  */
  public static CustomFieldsResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomFieldsResource.class);
  }

 /**
  * Convert an instance of CustomFieldsResource to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

