/*
 * External API
 *   # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A pay component defined for a client
 */
@ApiModel(description = "A pay component defined for a client")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PayComponent {
  public static final String SERIALIZED_NAME_CLTPC_ID = "cltpcId";
  @SerializedName(SERIALIZED_NAME_CLTPC_ID)
  private Long cltpcId;

  public static final String SERIALIZED_NAME_OFFERING_ID = "offeringId";
  @SerializedName(SERIALIZED_NAME_OFFERING_ID)
  private String offeringId;

  public static final String SERIALIZED_NAME_PC_ID = "pcId";
  @SerializedName(SERIALIZED_NAME_PC_ID)
  private Long pcId;

  public static final String SERIALIZED_NAME_CUSTOM_NAME = "customName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_NAME)
  private String customName;

  public static final String SERIALIZED_NAME_REPORT_CODE = "reportCode";
  @SerializedName(SERIALIZED_NAME_REPORT_CODE)
  private String reportCode;

  public static final String SERIALIZED_NAME_IS_PAYCHEX_ADMINISTERED = "isPaychexAdministered";
  @SerializedName(SERIALIZED_NAME_IS_PAYCHEX_ADMINISTERED)
  private Boolean isPaychexAdministered;

  public static final String SERIALIZED_NAME_DEDUCTION_PRIORITY = "deductionPriority";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_PRIORITY)
  private Integer deductionPriority;

  public static final String SERIALIZED_NAME_REF_ID = "refId";
  @SerializedName(SERIALIZED_NAME_REF_ID)
  private Long refId;

  public static final String SERIALIZED_NAME_PAY_COMP_NAME = "payCompName";
  @SerializedName(SERIALIZED_NAME_PAY_COMP_NAME)
  private String payCompName;

  public static final String SERIALIZED_NAME_PAY_CPNT_TYPE_ID = "payCpntTypeId";
  @SerializedName(SERIALIZED_NAME_PAY_CPNT_TYPE_ID)
  private Long payCpntTypeId;

  public static final String SERIALIZED_NAME_PAY_CPNT_TYPE = "payCpntType";
  @SerializedName(SERIALIZED_NAME_PAY_CPNT_TYPE)
  private String payCpntType;

  public static final String SERIALIZED_NAME_CLASS_TYPE_ID = "classTypeId";
  @SerializedName(SERIALIZED_NAME_CLASS_TYPE_ID)
  private Long classTypeId;

  public static final String SERIALIZED_NAME_CLASS_TYPE = "classType";
  @SerializedName(SERIALIZED_NAME_CLASS_TYPE)
  private String classType;

  public static final String SERIALIZED_NAME_PAY_FREQ_ID = "payFreqId";
  @SerializedName(SERIALIZED_NAME_PAY_FREQ_ID)
  private Long payFreqId;

  public static final String SERIALIZED_NAME_PAY_FREQ = "payFreq";
  @SerializedName(SERIALIZED_NAME_PAY_FREQ)
  private String payFreq;

  public static final String SERIALIZED_NAME_FREQ_TYPE_ID = "freqTypeId";
  @SerializedName(SERIALIZED_NAME_FREQ_TYPE_ID)
  private Long freqTypeId;

  public static final String SERIALIZED_NAME_FREQ_TYPE = "freqType";
  @SerializedName(SERIALIZED_NAME_FREQ_TYPE)
  private String freqType;

  public static final String SERIALIZED_NAME_FIRST_CHECK_RULE_ID = "firstCheckRuleId";
  @SerializedName(SERIALIZED_NAME_FIRST_CHECK_RULE_ID)
  private Long firstCheckRuleId;

  public static final String SERIALIZED_NAME_FIRST_CHECK_RULE = "firstCheckRule";
  @SerializedName(SERIALIZED_NAME_FIRST_CHECK_RULE)
  private String firstCheckRule;

  public static final String SERIALIZED_NAME_IS_BANK_REQUIRED = "isBankRequired";
  @SerializedName(SERIALIZED_NAME_IS_BANK_REQUIRED)
  private Boolean isBankRequired;

  public static final String SERIALIZED_NAME_COLLECT_ARREARS_ON_SHORTFALL = "collectArrearsOnShortfall";
  @SerializedName(SERIALIZED_NAME_COLLECT_ARREARS_ON_SHORTFALL)
  private Boolean collectArrearsOnShortfall;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public PayComponent() {
  }

  public PayComponent cltpcId(Long cltpcId) {
    
    
    
    
    this.cltpcId = cltpcId;
    return this;
  }

   /**
   * Get cltpcId
   * @return cltpcId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCltpcId() {
    return cltpcId;
  }


  public void setCltpcId(Long cltpcId) {
    
    
    
    this.cltpcId = cltpcId;
  }


  public PayComponent offeringId(String offeringId) {
    
    
    
    
    this.offeringId = offeringId;
    return this;
  }

   /**
   * Get offeringId
   * @return offeringId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOfferingId() {
    return offeringId;
  }


  public void setOfferingId(String offeringId) {
    
    
    
    this.offeringId = offeringId;
  }


  public PayComponent pcId(Long pcId) {
    
    
    
    
    this.pcId = pcId;
    return this;
  }

   /**
   * Get pcId
   * @return pcId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPcId() {
    return pcId;
  }


  public void setPcId(Long pcId) {
    
    
    
    this.pcId = pcId;
  }


  public PayComponent customName(String customName) {
    
    
    
    
    this.customName = customName;
    return this;
  }

   /**
   * Get customName
   * @return customName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomName() {
    return customName;
  }


  public void setCustomName(String customName) {
    
    
    
    this.customName = customName;
  }


  public PayComponent reportCode(String reportCode) {
    
    
    
    
    this.reportCode = reportCode;
    return this;
  }

   /**
   * Get reportCode
   * @return reportCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReportCode() {
    return reportCode;
  }


  public void setReportCode(String reportCode) {
    
    
    
    this.reportCode = reportCode;
  }


  public PayComponent isPaychexAdministered(Boolean isPaychexAdministered) {
    
    
    
    
    this.isPaychexAdministered = isPaychexAdministered;
    return this;
  }

   /**
   * Get isPaychexAdministered
   * @return isPaychexAdministered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPaychexAdministered() {
    return isPaychexAdministered;
  }


  public void setIsPaychexAdministered(Boolean isPaychexAdministered) {
    
    
    
    this.isPaychexAdministered = isPaychexAdministered;
  }


  public PayComponent deductionPriority(Integer deductionPriority) {
    
    
    
    
    this.deductionPriority = deductionPriority;
    return this;
  }

   /**
   * Get deductionPriority
   * @return deductionPriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeductionPriority() {
    return deductionPriority;
  }


  public void setDeductionPriority(Integer deductionPriority) {
    
    
    
    this.deductionPriority = deductionPriority;
  }


  public PayComponent refId(Long refId) {
    
    
    
    
    this.refId = refId;
    return this;
  }

   /**
   * Get refId
   * @return refId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRefId() {
    return refId;
  }


  public void setRefId(Long refId) {
    
    
    
    this.refId = refId;
  }


  public PayComponent payCompName(String payCompName) {
    
    
    
    
    this.payCompName = payCompName;
    return this;
  }

   /**
   * Get payCompName
   * @return payCompName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayCompName() {
    return payCompName;
  }


  public void setPayCompName(String payCompName) {
    
    
    
    this.payCompName = payCompName;
  }


  public PayComponent payCpntTypeId(Long payCpntTypeId) {
    
    
    
    
    this.payCpntTypeId = payCpntTypeId;
    return this;
  }

   /**
   * Get payCpntTypeId
   * @return payCpntTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPayCpntTypeId() {
    return payCpntTypeId;
  }


  public void setPayCpntTypeId(Long payCpntTypeId) {
    
    
    
    this.payCpntTypeId = payCpntTypeId;
  }


  public PayComponent payCpntType(String payCpntType) {
    
    
    
    
    this.payCpntType = payCpntType;
    return this;
  }

   /**
   * Get payCpntType
   * @return payCpntType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayCpntType() {
    return payCpntType;
  }


  public void setPayCpntType(String payCpntType) {
    
    
    
    this.payCpntType = payCpntType;
  }


  public PayComponent classTypeId(Long classTypeId) {
    
    
    
    
    this.classTypeId = classTypeId;
    return this;
  }

   /**
   * Get classTypeId
   * @return classTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getClassTypeId() {
    return classTypeId;
  }


  public void setClassTypeId(Long classTypeId) {
    
    
    
    this.classTypeId = classTypeId;
  }


  public PayComponent classType(String classType) {
    
    
    
    
    this.classType = classType;
    return this;
  }

   /**
   * Get classType
   * @return classType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClassType() {
    return classType;
  }


  public void setClassType(String classType) {
    
    
    
    this.classType = classType;
  }


  public PayComponent payFreqId(Long payFreqId) {
    
    
    
    
    this.payFreqId = payFreqId;
    return this;
  }

   /**
   * Get payFreqId
   * @return payFreqId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPayFreqId() {
    return payFreqId;
  }


  public void setPayFreqId(Long payFreqId) {
    
    
    
    this.payFreqId = payFreqId;
  }


  public PayComponent payFreq(String payFreq) {
    
    
    
    
    this.payFreq = payFreq;
    return this;
  }

   /**
   * Get payFreq
   * @return payFreq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayFreq() {
    return payFreq;
  }


  public void setPayFreq(String payFreq) {
    
    
    
    this.payFreq = payFreq;
  }


  public PayComponent freqTypeId(Long freqTypeId) {
    
    
    
    
    this.freqTypeId = freqTypeId;
    return this;
  }

   /**
   * Get freqTypeId
   * @return freqTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getFreqTypeId() {
    return freqTypeId;
  }


  public void setFreqTypeId(Long freqTypeId) {
    
    
    
    this.freqTypeId = freqTypeId;
  }


  public PayComponent freqType(String freqType) {
    
    
    
    
    this.freqType = freqType;
    return this;
  }

   /**
   * Get freqType
   * @return freqType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFreqType() {
    return freqType;
  }


  public void setFreqType(String freqType) {
    
    
    
    this.freqType = freqType;
  }


  public PayComponent firstCheckRuleId(Long firstCheckRuleId) {
    
    
    
    
    this.firstCheckRuleId = firstCheckRuleId;
    return this;
  }

   /**
   * Get firstCheckRuleId
   * @return firstCheckRuleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getFirstCheckRuleId() {
    return firstCheckRuleId;
  }


  public void setFirstCheckRuleId(Long firstCheckRuleId) {
    
    
    
    this.firstCheckRuleId = firstCheckRuleId;
  }


  public PayComponent firstCheckRule(String firstCheckRule) {
    
    
    
    
    this.firstCheckRule = firstCheckRule;
    return this;
  }

   /**
   * Get firstCheckRule
   * @return firstCheckRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstCheckRule() {
    return firstCheckRule;
  }


  public void setFirstCheckRule(String firstCheckRule) {
    
    
    
    this.firstCheckRule = firstCheckRule;
  }


  public PayComponent isBankRequired(Boolean isBankRequired) {
    
    
    
    
    this.isBankRequired = isBankRequired;
    return this;
  }

   /**
   * Get isBankRequired
   * @return isBankRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsBankRequired() {
    return isBankRequired;
  }


  public void setIsBankRequired(Boolean isBankRequired) {
    
    
    
    this.isBankRequired = isBankRequired;
  }


  public PayComponent collectArrearsOnShortfall(Boolean collectArrearsOnShortfall) {
    
    
    
    
    this.collectArrearsOnShortfall = collectArrearsOnShortfall;
    return this;
  }

   /**
   * Get collectArrearsOnShortfall
   * @return collectArrearsOnShortfall
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCollectArrearsOnShortfall() {
    return collectArrearsOnShortfall;
  }


  public void setCollectArrearsOnShortfall(Boolean collectArrearsOnShortfall) {
    
    
    
    this.collectArrearsOnShortfall = collectArrearsOnShortfall;
  }


  public PayComponent startDate(OffsetDateTime startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    
    
    
    this.startDate = startDate;
  }


  public PayComponent endDate(OffsetDateTime endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    
    
    
    this.endDate = endDate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PayComponent instance itself
   */
  public PayComponent putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayComponent payComponent = (PayComponent) o;
    return Objects.equals(this.cltpcId, payComponent.cltpcId) &&
        Objects.equals(this.offeringId, payComponent.offeringId) &&
        Objects.equals(this.pcId, payComponent.pcId) &&
        Objects.equals(this.customName, payComponent.customName) &&
        Objects.equals(this.reportCode, payComponent.reportCode) &&
        Objects.equals(this.isPaychexAdministered, payComponent.isPaychexAdministered) &&
        Objects.equals(this.deductionPriority, payComponent.deductionPriority) &&
        Objects.equals(this.refId, payComponent.refId) &&
        Objects.equals(this.payCompName, payComponent.payCompName) &&
        Objects.equals(this.payCpntTypeId, payComponent.payCpntTypeId) &&
        Objects.equals(this.payCpntType, payComponent.payCpntType) &&
        Objects.equals(this.classTypeId, payComponent.classTypeId) &&
        Objects.equals(this.classType, payComponent.classType) &&
        Objects.equals(this.payFreqId, payComponent.payFreqId) &&
        Objects.equals(this.payFreq, payComponent.payFreq) &&
        Objects.equals(this.freqTypeId, payComponent.freqTypeId) &&
        Objects.equals(this.freqType, payComponent.freqType) &&
        Objects.equals(this.firstCheckRuleId, payComponent.firstCheckRuleId) &&
        Objects.equals(this.firstCheckRule, payComponent.firstCheckRule) &&
        Objects.equals(this.isBankRequired, payComponent.isBankRequired) &&
        Objects.equals(this.collectArrearsOnShortfall, payComponent.collectArrearsOnShortfall) &&
        Objects.equals(this.startDate, payComponent.startDate) &&
        Objects.equals(this.endDate, payComponent.endDate)&&
        Objects.equals(this.additionalProperties, payComponent.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cltpcId, offeringId, pcId, customName, reportCode, isPaychexAdministered, deductionPriority, refId, payCompName, payCpntTypeId, payCpntType, classTypeId, classType, payFreqId, payFreq, freqTypeId, freqType, firstCheckRuleId, firstCheckRule, isBankRequired, collectArrearsOnShortfall, startDate, endDate, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayComponent {\n");
    sb.append("    cltpcId: ").append(toIndentedString(cltpcId)).append("\n");
    sb.append("    offeringId: ").append(toIndentedString(offeringId)).append("\n");
    sb.append("    pcId: ").append(toIndentedString(pcId)).append("\n");
    sb.append("    customName: ").append(toIndentedString(customName)).append("\n");
    sb.append("    reportCode: ").append(toIndentedString(reportCode)).append("\n");
    sb.append("    isPaychexAdministered: ").append(toIndentedString(isPaychexAdministered)).append("\n");
    sb.append("    deductionPriority: ").append(toIndentedString(deductionPriority)).append("\n");
    sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
    sb.append("    payCompName: ").append(toIndentedString(payCompName)).append("\n");
    sb.append("    payCpntTypeId: ").append(toIndentedString(payCpntTypeId)).append("\n");
    sb.append("    payCpntType: ").append(toIndentedString(payCpntType)).append("\n");
    sb.append("    classTypeId: ").append(toIndentedString(classTypeId)).append("\n");
    sb.append("    classType: ").append(toIndentedString(classType)).append("\n");
    sb.append("    payFreqId: ").append(toIndentedString(payFreqId)).append("\n");
    sb.append("    payFreq: ").append(toIndentedString(payFreq)).append("\n");
    sb.append("    freqTypeId: ").append(toIndentedString(freqTypeId)).append("\n");
    sb.append("    freqType: ").append(toIndentedString(freqType)).append("\n");
    sb.append("    firstCheckRuleId: ").append(toIndentedString(firstCheckRuleId)).append("\n");
    sb.append("    firstCheckRule: ").append(toIndentedString(firstCheckRule)).append("\n");
    sb.append("    isBankRequired: ").append(toIndentedString(isBankRequired)).append("\n");
    sb.append("    collectArrearsOnShortfall: ").append(toIndentedString(collectArrearsOnShortfall)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cltpcId");
    openapiFields.add("offeringId");
    openapiFields.add("pcId");
    openapiFields.add("customName");
    openapiFields.add("reportCode");
    openapiFields.add("isPaychexAdministered");
    openapiFields.add("deductionPriority");
    openapiFields.add("refId");
    openapiFields.add("payCompName");
    openapiFields.add("payCpntTypeId");
    openapiFields.add("payCpntType");
    openapiFields.add("classTypeId");
    openapiFields.add("classType");
    openapiFields.add("payFreqId");
    openapiFields.add("payFreq");
    openapiFields.add("freqTypeId");
    openapiFields.add("freqType");
    openapiFields.add("firstCheckRuleId");
    openapiFields.add("firstCheckRule");
    openapiFields.add("isBankRequired");
    openapiFields.add("collectArrearsOnShortfall");
    openapiFields.add("startDate");
    openapiFields.add("endDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PayComponent
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PayComponent.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PayComponent is not found in the empty JSON string", PayComponent.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("offeringId") != null && !jsonObj.get("offeringId").isJsonNull()) && !jsonObj.get("offeringId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `offeringId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("offeringId").toString()));
      }
      if ((jsonObj.get("customName") != null && !jsonObj.get("customName").isJsonNull()) && !jsonObj.get("customName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customName").toString()));
      }
      if ((jsonObj.get("reportCode") != null && !jsonObj.get("reportCode").isJsonNull()) && !jsonObj.get("reportCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportCode").toString()));
      }
      if ((jsonObj.get("payCompName") != null && !jsonObj.get("payCompName").isJsonNull()) && !jsonObj.get("payCompName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payCompName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payCompName").toString()));
      }
      if ((jsonObj.get("payCpntType") != null && !jsonObj.get("payCpntType").isJsonNull()) && !jsonObj.get("payCpntType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payCpntType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payCpntType").toString()));
      }
      if ((jsonObj.get("classType") != null && !jsonObj.get("classType").isJsonNull()) && !jsonObj.get("classType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `classType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("classType").toString()));
      }
      if ((jsonObj.get("payFreq") != null && !jsonObj.get("payFreq").isJsonNull()) && !jsonObj.get("payFreq").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payFreq` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payFreq").toString()));
      }
      if ((jsonObj.get("freqType") != null && !jsonObj.get("freqType").isJsonNull()) && !jsonObj.get("freqType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freqType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freqType").toString()));
      }
      if ((jsonObj.get("firstCheckRule") != null && !jsonObj.get("firstCheckRule").isJsonNull()) && !jsonObj.get("firstCheckRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstCheckRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstCheckRule").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PayComponent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PayComponent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PayComponent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PayComponent.class));

       return (TypeAdapter<T>) new TypeAdapter<PayComponent>() {
           @Override
           public void write(JsonWriter out, PayComponent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PayComponent read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PayComponent instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PayComponent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PayComponent
  * @throws IOException if the JSON string is invalid with respect to PayComponent
  */
  public static PayComponent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PayComponent.class);
  }

 /**
  * Convert an instance of PayComponent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

