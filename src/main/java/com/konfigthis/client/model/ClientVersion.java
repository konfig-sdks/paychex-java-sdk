/*
 * External API
 *   # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Client;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ClientVersion
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ClientVersion {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_TAX_PAYER_IDENTIFICATION_NUMBER = "taxPayerIdentificationNumber";
  @SerializedName(SERIALIZED_NAME_TAX_PAYER_IDENTIFICATION_NUMBER)
  private String taxPayerIdentificationNumber;

  public static final String SERIALIZED_NAME_TIN_LAST_FOUR = "tinLastFour";
  @SerializedName(SERIALIZED_NAME_TIN_LAST_FOUR)
  private String tinLastFour;

  public static final String SERIALIZED_NAME_TIN_TYPE = "tinType";
  @SerializedName(SERIALIZED_NAME_TIN_TYPE)
  private String tinType;

  public static final String SERIALIZED_NAME_TIN_VALID_STATUS_CODE = "tinValidStatusCode";
  @SerializedName(SERIALIZED_NAME_TIN_VALID_STATUS_CODE)
  private String tinValidStatusCode;

  public static final String SERIALIZED_NAME_NORMALIZED_NAME = "normalizedName";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_NAME)
  private String normalizedName;

  public static final String SERIALIZED_NAME_NORMALIZED_CITY = "normalizedCity";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_CITY)
  private String normalizedCity;

  public static final String SERIALIZED_NAME_NORMALIZED_COUNTRY_CODE = "normalizedCountryCode";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_COUNTRY_CODE)
  private String normalizedCountryCode;

  public static final String SERIALIZED_NAME_VERSION_STATUS_CODE = "versionStatusCode";
  @SerializedName(SERIALIZED_NAME_VERSION_STATUS_CODE)
  private String versionStatusCode;

  public static final String SERIALIZED_NAME_BEGIN_EFFECTIVE_DATE = "beginEffectiveDate";
  @SerializedName(SERIALIZED_NAME_BEGIN_EFFECTIVE_DATE)
  private OffsetDateTime beginEffectiveDate;

  public static final String SERIALIZED_NAME_END_EFFECTIVE_DATE = "endEffectiveDate";
  @SerializedName(SERIALIZED_NAME_END_EFFECTIVE_DATE)
  private OffsetDateTime endEffectiveDate;

  public static final String SERIALIZED_NAME_NORMALIZED_BUILDING_NUMBER = "normalizedBuildingNumber";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_BUILDING_NUMBER)
  private String normalizedBuildingNumber;

  public static final String SERIALIZED_NAME_NORMALIZED_STEET_NAME = "normalizedSteetName";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_STEET_NAME)
  private String normalizedSteetName;

  public static final String SERIALIZED_NAME_NORMALIZED_UNIT_NAME = "normalizedUnitName";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_UNIT_NAME)
  private String normalizedUnitName;

  public static final String SERIALIZED_NAME_NORMALIZED_P_O_BOX = "normalizedPOBox";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_P_O_BOX)
  private String normalizedPOBox;

  public static final String SERIALIZED_NAME_NORMALIZED_STATE_PROVINCE = "normalizedStateProvince";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_STATE_PROVINCE)
  private String normalizedStateProvince;

  public static final String SERIALIZED_NAME_NORMALIZED_STATE_PROVINCE_F = "normalizedStateProvinceF";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_STATE_PROVINCE_F)
  private String normalizedStateProvinceF;

  public static final String SERIALIZED_NAME_NORMALIZED_POSTAL_CODE = "normalizedPostalCode";
  @SerializedName(SERIALIZED_NAME_NORMALIZED_POSTAL_CODE)
  private String normalizedPostalCode;

  public static final String SERIALIZED_NAME_TIN_VERSION_STATUS_CODE = "tinVersionStatusCode";
  @SerializedName(SERIALIZED_NAME_TIN_VERSION_STATUS_CODE)
  private String tinVersionStatusCode;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DATE = "statusDate";
  @SerializedName(SERIALIZED_NAME_STATUS_DATE)
  private OffsetDateTime statusDate;

  public static final String SERIALIZED_NAME_SUPERCEEDED_BY = "superceededBy";
  @SerializedName(SERIALIZED_NAME_SUPERCEEDED_BY)
  private String superceededBy;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY_APPLICATION_NAME = "modifiedByApplicationName";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_APPLICATION_NAME)
  private String modifiedByApplicationName;

  public static final String SERIALIZED_NAME_MODIFIED_BY_APPLICATION_SUB_PROCESS_NAME = "modifiedByApplicationSubProcessName";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_APPLICATION_SUB_PROCESS_NAME)
  private String modifiedByApplicationSubProcessName;

  public static final String SERIALIZED_NAME_MODIFIED_BY_USER_ID = "modifiedByUserId";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_USER_ID)
  private String modifiedByUserId;

  public static final String SERIALIZED_NAME_MODIFIED_REASON = "modifiedReason";
  @SerializedName(SERIALIZED_NAME_MODIFIED_REASON)
  private String modifiedReason;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private Client client;

  public ClientVersion() {
  }

  public ClientVersion id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public ClientVersion taxPayerIdentificationNumber(String taxPayerIdentificationNumber) {
    
    
    
    
    this.taxPayerIdentificationNumber = taxPayerIdentificationNumber;
    return this;
  }

   /**
   * Get taxPayerIdentificationNumber
   * @return taxPayerIdentificationNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxPayerIdentificationNumber() {
    return taxPayerIdentificationNumber;
  }


  public void setTaxPayerIdentificationNumber(String taxPayerIdentificationNumber) {
    
    
    
    this.taxPayerIdentificationNumber = taxPayerIdentificationNumber;
  }


  public ClientVersion tinLastFour(String tinLastFour) {
    
    
    
    
    this.tinLastFour = tinLastFour;
    return this;
  }

   /**
   * Get tinLastFour
   * @return tinLastFour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTinLastFour() {
    return tinLastFour;
  }


  public void setTinLastFour(String tinLastFour) {
    
    
    
    this.tinLastFour = tinLastFour;
  }


  public ClientVersion tinType(String tinType) {
    
    
    
    
    this.tinType = tinType;
    return this;
  }

   /**
   * Get tinType
   * @return tinType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTinType() {
    return tinType;
  }


  public void setTinType(String tinType) {
    
    
    
    this.tinType = tinType;
  }


  public ClientVersion tinValidStatusCode(String tinValidStatusCode) {
    
    
    
    
    this.tinValidStatusCode = tinValidStatusCode;
    return this;
  }

   /**
   * Get tinValidStatusCode
   * @return tinValidStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTinValidStatusCode() {
    return tinValidStatusCode;
  }


  public void setTinValidStatusCode(String tinValidStatusCode) {
    
    
    
    this.tinValidStatusCode = tinValidStatusCode;
  }


  public ClientVersion normalizedName(String normalizedName) {
    
    
    
    
    this.normalizedName = normalizedName;
    return this;
  }

   /**
   * Get normalizedName
   * @return normalizedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedName() {
    return normalizedName;
  }


  public void setNormalizedName(String normalizedName) {
    
    
    
    this.normalizedName = normalizedName;
  }


  public ClientVersion normalizedCity(String normalizedCity) {
    
    
    
    
    this.normalizedCity = normalizedCity;
    return this;
  }

   /**
   * Get normalizedCity
   * @return normalizedCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedCity() {
    return normalizedCity;
  }


  public void setNormalizedCity(String normalizedCity) {
    
    
    
    this.normalizedCity = normalizedCity;
  }


  public ClientVersion normalizedCountryCode(String normalizedCountryCode) {
    
    
    
    
    this.normalizedCountryCode = normalizedCountryCode;
    return this;
  }

   /**
   * Get normalizedCountryCode
   * @return normalizedCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedCountryCode() {
    return normalizedCountryCode;
  }


  public void setNormalizedCountryCode(String normalizedCountryCode) {
    
    
    
    this.normalizedCountryCode = normalizedCountryCode;
  }


  public ClientVersion versionStatusCode(String versionStatusCode) {
    
    
    
    
    this.versionStatusCode = versionStatusCode;
    return this;
  }

   /**
   * Get versionStatusCode
   * @return versionStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVersionStatusCode() {
    return versionStatusCode;
  }


  public void setVersionStatusCode(String versionStatusCode) {
    
    
    
    this.versionStatusCode = versionStatusCode;
  }


  public ClientVersion beginEffectiveDate(OffsetDateTime beginEffectiveDate) {
    
    
    
    
    this.beginEffectiveDate = beginEffectiveDate;
    return this;
  }

   /**
   * Get beginEffectiveDate
   * @return beginEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBeginEffectiveDate() {
    return beginEffectiveDate;
  }


  public void setBeginEffectiveDate(OffsetDateTime beginEffectiveDate) {
    
    
    
    this.beginEffectiveDate = beginEffectiveDate;
  }


  public ClientVersion endEffectiveDate(OffsetDateTime endEffectiveDate) {
    
    
    
    
    this.endEffectiveDate = endEffectiveDate;
    return this;
  }

   /**
   * Get endEffectiveDate
   * @return endEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndEffectiveDate() {
    return endEffectiveDate;
  }


  public void setEndEffectiveDate(OffsetDateTime endEffectiveDate) {
    
    
    
    this.endEffectiveDate = endEffectiveDate;
  }


  public ClientVersion normalizedBuildingNumber(String normalizedBuildingNumber) {
    
    
    
    
    this.normalizedBuildingNumber = normalizedBuildingNumber;
    return this;
  }

   /**
   * Get normalizedBuildingNumber
   * @return normalizedBuildingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedBuildingNumber() {
    return normalizedBuildingNumber;
  }


  public void setNormalizedBuildingNumber(String normalizedBuildingNumber) {
    
    
    
    this.normalizedBuildingNumber = normalizedBuildingNumber;
  }


  public ClientVersion normalizedSteetName(String normalizedSteetName) {
    
    
    
    
    this.normalizedSteetName = normalizedSteetName;
    return this;
  }

   /**
   * Get normalizedSteetName
   * @return normalizedSteetName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedSteetName() {
    return normalizedSteetName;
  }


  public void setNormalizedSteetName(String normalizedSteetName) {
    
    
    
    this.normalizedSteetName = normalizedSteetName;
  }


  public ClientVersion normalizedUnitName(String normalizedUnitName) {
    
    
    
    
    this.normalizedUnitName = normalizedUnitName;
    return this;
  }

   /**
   * Get normalizedUnitName
   * @return normalizedUnitName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedUnitName() {
    return normalizedUnitName;
  }


  public void setNormalizedUnitName(String normalizedUnitName) {
    
    
    
    this.normalizedUnitName = normalizedUnitName;
  }


  public ClientVersion normalizedPOBox(String normalizedPOBox) {
    
    
    
    
    this.normalizedPOBox = normalizedPOBox;
    return this;
  }

   /**
   * Get normalizedPOBox
   * @return normalizedPOBox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedPOBox() {
    return normalizedPOBox;
  }


  public void setNormalizedPOBox(String normalizedPOBox) {
    
    
    
    this.normalizedPOBox = normalizedPOBox;
  }


  public ClientVersion normalizedStateProvince(String normalizedStateProvince) {
    
    
    
    
    this.normalizedStateProvince = normalizedStateProvince;
    return this;
  }

   /**
   * Get normalizedStateProvince
   * @return normalizedStateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedStateProvince() {
    return normalizedStateProvince;
  }


  public void setNormalizedStateProvince(String normalizedStateProvince) {
    
    
    
    this.normalizedStateProvince = normalizedStateProvince;
  }


  public ClientVersion normalizedStateProvinceF(String normalizedStateProvinceF) {
    
    
    
    
    this.normalizedStateProvinceF = normalizedStateProvinceF;
    return this;
  }

   /**
   * Get normalizedStateProvinceF
   * @return normalizedStateProvinceF
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedStateProvinceF() {
    return normalizedStateProvinceF;
  }


  public void setNormalizedStateProvinceF(String normalizedStateProvinceF) {
    
    
    
    this.normalizedStateProvinceF = normalizedStateProvinceF;
  }


  public ClientVersion normalizedPostalCode(String normalizedPostalCode) {
    
    
    
    
    this.normalizedPostalCode = normalizedPostalCode;
    return this;
  }

   /**
   * Get normalizedPostalCode
   * @return normalizedPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNormalizedPostalCode() {
    return normalizedPostalCode;
  }


  public void setNormalizedPostalCode(String normalizedPostalCode) {
    
    
    
    this.normalizedPostalCode = normalizedPostalCode;
  }


  public ClientVersion tinVersionStatusCode(String tinVersionStatusCode) {
    
    
    
    
    this.tinVersionStatusCode = tinVersionStatusCode;
    return this;
  }

   /**
   * Get tinVersionStatusCode
   * @return tinVersionStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTinVersionStatusCode() {
    return tinVersionStatusCode;
  }


  public void setTinVersionStatusCode(String tinVersionStatusCode) {
    
    
    
    this.tinVersionStatusCode = tinVersionStatusCode;
  }


  public ClientVersion status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public ClientVersion statusDate(OffsetDateTime statusDate) {
    
    
    
    
    this.statusDate = statusDate;
    return this;
  }

   /**
   * Get statusDate
   * @return statusDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStatusDate() {
    return statusDate;
  }


  public void setStatusDate(OffsetDateTime statusDate) {
    
    
    
    this.statusDate = statusDate;
  }


  public ClientVersion superceededBy(String superceededBy) {
    
    
    
    
    this.superceededBy = superceededBy;
    return this;
  }

   /**
   * Get superceededBy
   * @return superceededBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSuperceededBy() {
    return superceededBy;
  }


  public void setSuperceededBy(String superceededBy) {
    
    
    
    this.superceededBy = superceededBy;
  }


  public ClientVersion modifiedDate(OffsetDateTime modifiedDate) {
    
    
    
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  public void setModifiedDate(OffsetDateTime modifiedDate) {
    
    
    
    this.modifiedDate = modifiedDate;
  }


  public ClientVersion modifiedByApplicationName(String modifiedByApplicationName) {
    
    
    
    
    this.modifiedByApplicationName = modifiedByApplicationName;
    return this;
  }

   /**
   * Get modifiedByApplicationName
   * @return modifiedByApplicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByApplicationName() {
    return modifiedByApplicationName;
  }


  public void setModifiedByApplicationName(String modifiedByApplicationName) {
    
    
    
    this.modifiedByApplicationName = modifiedByApplicationName;
  }


  public ClientVersion modifiedByApplicationSubProcessName(String modifiedByApplicationSubProcessName) {
    
    
    
    
    this.modifiedByApplicationSubProcessName = modifiedByApplicationSubProcessName;
    return this;
  }

   /**
   * Get modifiedByApplicationSubProcessName
   * @return modifiedByApplicationSubProcessName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByApplicationSubProcessName() {
    return modifiedByApplicationSubProcessName;
  }


  public void setModifiedByApplicationSubProcessName(String modifiedByApplicationSubProcessName) {
    
    
    
    this.modifiedByApplicationSubProcessName = modifiedByApplicationSubProcessName;
  }


  public ClientVersion modifiedByUserId(String modifiedByUserId) {
    
    
    
    
    this.modifiedByUserId = modifiedByUserId;
    return this;
  }

   /**
   * Get modifiedByUserId
   * @return modifiedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedByUserId() {
    return modifiedByUserId;
  }


  public void setModifiedByUserId(String modifiedByUserId) {
    
    
    
    this.modifiedByUserId = modifiedByUserId;
  }


  public ClientVersion modifiedReason(String modifiedReason) {
    
    
    
    
    this.modifiedReason = modifiedReason;
    return this;
  }

   /**
   * Get modifiedReason
   * @return modifiedReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModifiedReason() {
    return modifiedReason;
  }


  public void setModifiedReason(String modifiedReason) {
    
    
    
    this.modifiedReason = modifiedReason;
  }


  public ClientVersion client(Client client) {
    
    
    
    
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Client getClient() {
    return client;
  }


  public void setClient(Client client) {
    
    
    
    this.client = client;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ClientVersion instance itself
   */
  public ClientVersion putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientVersion clientVersion = (ClientVersion) o;
    return Objects.equals(this.id, clientVersion.id) &&
        Objects.equals(this.taxPayerIdentificationNumber, clientVersion.taxPayerIdentificationNumber) &&
        Objects.equals(this.tinLastFour, clientVersion.tinLastFour) &&
        Objects.equals(this.tinType, clientVersion.tinType) &&
        Objects.equals(this.tinValidStatusCode, clientVersion.tinValidStatusCode) &&
        Objects.equals(this.normalizedName, clientVersion.normalizedName) &&
        Objects.equals(this.normalizedCity, clientVersion.normalizedCity) &&
        Objects.equals(this.normalizedCountryCode, clientVersion.normalizedCountryCode) &&
        Objects.equals(this.versionStatusCode, clientVersion.versionStatusCode) &&
        Objects.equals(this.beginEffectiveDate, clientVersion.beginEffectiveDate) &&
        Objects.equals(this.endEffectiveDate, clientVersion.endEffectiveDate) &&
        Objects.equals(this.normalizedBuildingNumber, clientVersion.normalizedBuildingNumber) &&
        Objects.equals(this.normalizedSteetName, clientVersion.normalizedSteetName) &&
        Objects.equals(this.normalizedUnitName, clientVersion.normalizedUnitName) &&
        Objects.equals(this.normalizedPOBox, clientVersion.normalizedPOBox) &&
        Objects.equals(this.normalizedStateProvince, clientVersion.normalizedStateProvince) &&
        Objects.equals(this.normalizedStateProvinceF, clientVersion.normalizedStateProvinceF) &&
        Objects.equals(this.normalizedPostalCode, clientVersion.normalizedPostalCode) &&
        Objects.equals(this.tinVersionStatusCode, clientVersion.tinVersionStatusCode) &&
        Objects.equals(this.status, clientVersion.status) &&
        Objects.equals(this.statusDate, clientVersion.statusDate) &&
        Objects.equals(this.superceededBy, clientVersion.superceededBy) &&
        Objects.equals(this.modifiedDate, clientVersion.modifiedDate) &&
        Objects.equals(this.modifiedByApplicationName, clientVersion.modifiedByApplicationName) &&
        Objects.equals(this.modifiedByApplicationSubProcessName, clientVersion.modifiedByApplicationSubProcessName) &&
        Objects.equals(this.modifiedByUserId, clientVersion.modifiedByUserId) &&
        Objects.equals(this.modifiedReason, clientVersion.modifiedReason) &&
        Objects.equals(this.client, clientVersion.client)&&
        Objects.equals(this.additionalProperties, clientVersion.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, taxPayerIdentificationNumber, tinLastFour, tinType, tinValidStatusCode, normalizedName, normalizedCity, normalizedCountryCode, versionStatusCode, beginEffectiveDate, endEffectiveDate, normalizedBuildingNumber, normalizedSteetName, normalizedUnitName, normalizedPOBox, normalizedStateProvince, normalizedStateProvinceF, normalizedPostalCode, tinVersionStatusCode, status, statusDate, superceededBy, modifiedDate, modifiedByApplicationName, modifiedByApplicationSubProcessName, modifiedByUserId, modifiedReason, client, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientVersion {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    taxPayerIdentificationNumber: ").append(toIndentedString(taxPayerIdentificationNumber)).append("\n");
    sb.append("    tinLastFour: ").append(toIndentedString(tinLastFour)).append("\n");
    sb.append("    tinType: ").append(toIndentedString(tinType)).append("\n");
    sb.append("    tinValidStatusCode: ").append(toIndentedString(tinValidStatusCode)).append("\n");
    sb.append("    normalizedName: ").append(toIndentedString(normalizedName)).append("\n");
    sb.append("    normalizedCity: ").append(toIndentedString(normalizedCity)).append("\n");
    sb.append("    normalizedCountryCode: ").append(toIndentedString(normalizedCountryCode)).append("\n");
    sb.append("    versionStatusCode: ").append(toIndentedString(versionStatusCode)).append("\n");
    sb.append("    beginEffectiveDate: ").append(toIndentedString(beginEffectiveDate)).append("\n");
    sb.append("    endEffectiveDate: ").append(toIndentedString(endEffectiveDate)).append("\n");
    sb.append("    normalizedBuildingNumber: ").append(toIndentedString(normalizedBuildingNumber)).append("\n");
    sb.append("    normalizedSteetName: ").append(toIndentedString(normalizedSteetName)).append("\n");
    sb.append("    normalizedUnitName: ").append(toIndentedString(normalizedUnitName)).append("\n");
    sb.append("    normalizedPOBox: ").append(toIndentedString(normalizedPOBox)).append("\n");
    sb.append("    normalizedStateProvince: ").append(toIndentedString(normalizedStateProvince)).append("\n");
    sb.append("    normalizedStateProvinceF: ").append(toIndentedString(normalizedStateProvinceF)).append("\n");
    sb.append("    normalizedPostalCode: ").append(toIndentedString(normalizedPostalCode)).append("\n");
    sb.append("    tinVersionStatusCode: ").append(toIndentedString(tinVersionStatusCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDate: ").append(toIndentedString(statusDate)).append("\n");
    sb.append("    superceededBy: ").append(toIndentedString(superceededBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedByApplicationName: ").append(toIndentedString(modifiedByApplicationName)).append("\n");
    sb.append("    modifiedByApplicationSubProcessName: ").append(toIndentedString(modifiedByApplicationSubProcessName)).append("\n");
    sb.append("    modifiedByUserId: ").append(toIndentedString(modifiedByUserId)).append("\n");
    sb.append("    modifiedReason: ").append(toIndentedString(modifiedReason)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("taxPayerIdentificationNumber");
    openapiFields.add("tinLastFour");
    openapiFields.add("tinType");
    openapiFields.add("tinValidStatusCode");
    openapiFields.add("normalizedName");
    openapiFields.add("normalizedCity");
    openapiFields.add("normalizedCountryCode");
    openapiFields.add("versionStatusCode");
    openapiFields.add("beginEffectiveDate");
    openapiFields.add("endEffectiveDate");
    openapiFields.add("normalizedBuildingNumber");
    openapiFields.add("normalizedSteetName");
    openapiFields.add("normalizedUnitName");
    openapiFields.add("normalizedPOBox");
    openapiFields.add("normalizedStateProvince");
    openapiFields.add("normalizedStateProvinceF");
    openapiFields.add("normalizedPostalCode");
    openapiFields.add("tinVersionStatusCode");
    openapiFields.add("status");
    openapiFields.add("statusDate");
    openapiFields.add("superceededBy");
    openapiFields.add("modifiedDate");
    openapiFields.add("modifiedByApplicationName");
    openapiFields.add("modifiedByApplicationSubProcessName");
    openapiFields.add("modifiedByUserId");
    openapiFields.add("modifiedReason");
    openapiFields.add("client");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ClientVersion
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ClientVersion.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClientVersion is not found in the empty JSON string", ClientVersion.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("taxPayerIdentificationNumber") != null && !jsonObj.get("taxPayerIdentificationNumber").isJsonNull()) && !jsonObj.get("taxPayerIdentificationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxPayerIdentificationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxPayerIdentificationNumber").toString()));
      }
      if ((jsonObj.get("tinLastFour") != null && !jsonObj.get("tinLastFour").isJsonNull()) && !jsonObj.get("tinLastFour").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tinLastFour` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tinLastFour").toString()));
      }
      if ((jsonObj.get("tinType") != null && !jsonObj.get("tinType").isJsonNull()) && !jsonObj.get("tinType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tinType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tinType").toString()));
      }
      if ((jsonObj.get("tinValidStatusCode") != null && !jsonObj.get("tinValidStatusCode").isJsonNull()) && !jsonObj.get("tinValidStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tinValidStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tinValidStatusCode").toString()));
      }
      if ((jsonObj.get("normalizedName") != null && !jsonObj.get("normalizedName").isJsonNull()) && !jsonObj.get("normalizedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedName").toString()));
      }
      if ((jsonObj.get("normalizedCity") != null && !jsonObj.get("normalizedCity").isJsonNull()) && !jsonObj.get("normalizedCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedCity").toString()));
      }
      if ((jsonObj.get("normalizedCountryCode") != null && !jsonObj.get("normalizedCountryCode").isJsonNull()) && !jsonObj.get("normalizedCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedCountryCode").toString()));
      }
      if ((jsonObj.get("versionStatusCode") != null && !jsonObj.get("versionStatusCode").isJsonNull()) && !jsonObj.get("versionStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionStatusCode").toString()));
      }
      if ((jsonObj.get("normalizedBuildingNumber") != null && !jsonObj.get("normalizedBuildingNumber").isJsonNull()) && !jsonObj.get("normalizedBuildingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedBuildingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedBuildingNumber").toString()));
      }
      if ((jsonObj.get("normalizedSteetName") != null && !jsonObj.get("normalizedSteetName").isJsonNull()) && !jsonObj.get("normalizedSteetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedSteetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedSteetName").toString()));
      }
      if ((jsonObj.get("normalizedUnitName") != null && !jsonObj.get("normalizedUnitName").isJsonNull()) && !jsonObj.get("normalizedUnitName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedUnitName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedUnitName").toString()));
      }
      if ((jsonObj.get("normalizedPOBox") != null && !jsonObj.get("normalizedPOBox").isJsonNull()) && !jsonObj.get("normalizedPOBox").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedPOBox` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedPOBox").toString()));
      }
      if ((jsonObj.get("normalizedStateProvince") != null && !jsonObj.get("normalizedStateProvince").isJsonNull()) && !jsonObj.get("normalizedStateProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedStateProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedStateProvince").toString()));
      }
      if ((jsonObj.get("normalizedStateProvinceF") != null && !jsonObj.get("normalizedStateProvinceF").isJsonNull()) && !jsonObj.get("normalizedStateProvinceF").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedStateProvinceF` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedStateProvinceF").toString()));
      }
      if ((jsonObj.get("normalizedPostalCode") != null && !jsonObj.get("normalizedPostalCode").isJsonNull()) && !jsonObj.get("normalizedPostalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normalizedPostalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normalizedPostalCode").toString()));
      }
      if ((jsonObj.get("tinVersionStatusCode") != null && !jsonObj.get("tinVersionStatusCode").isJsonNull()) && !jsonObj.get("tinVersionStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tinVersionStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tinVersionStatusCode").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("superceededBy") != null && !jsonObj.get("superceededBy").isJsonNull()) && !jsonObj.get("superceededBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `superceededBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("superceededBy").toString()));
      }
      if ((jsonObj.get("modifiedByApplicationName") != null && !jsonObj.get("modifiedByApplicationName").isJsonNull()) && !jsonObj.get("modifiedByApplicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedByApplicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedByApplicationName").toString()));
      }
      if ((jsonObj.get("modifiedByApplicationSubProcessName") != null && !jsonObj.get("modifiedByApplicationSubProcessName").isJsonNull()) && !jsonObj.get("modifiedByApplicationSubProcessName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedByApplicationSubProcessName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedByApplicationSubProcessName").toString()));
      }
      if ((jsonObj.get("modifiedByUserId") != null && !jsonObj.get("modifiedByUserId").isJsonNull()) && !jsonObj.get("modifiedByUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedByUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedByUserId").toString()));
      }
      if ((jsonObj.get("modifiedReason") != null && !jsonObj.get("modifiedReason").isJsonNull()) && !jsonObj.get("modifiedReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedReason").toString()));
      }
      // validate the optional field `client`
      if (jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) {
        Client.validateJsonObject(jsonObj.getAsJsonObject("client"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientVersion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientVersion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientVersion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientVersion.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientVersion>() {
           @Override
           public void write(JsonWriter out, ClientVersion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientVersion read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ClientVersion instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ClientVersion given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ClientVersion
  * @throws IOException if the JSON string is invalid with respect to ClientVersion
  */
  public static ClientVersion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientVersion.class);
  }

 /**
  * Convert an instance of ClientVersion to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

